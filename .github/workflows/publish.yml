name: Publish to GitHub Pages
on:
  push:
    branches: [main]

# security: restrict permissions for CI jobs.
permissions:
  contents: read

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#     - name: Checkout repository
#       uses: actions/checkout@v3
#     - name: Install Node.js
#       uses: actions/setup-node@v2
#       with:
#         node-version: '16'
#     - name: Install Antora
#       run: npm i antora
#     - name: Generate Site
#       run: npx antora antora-playbook-local.yml
#     - name: Publish to GitHub Pages
#       uses: peaceiris/actions-gh-pages@v3
#       with:
#         github_token: ${{ secrets.GITHUB_TOKEN }}
#         publish_dir: ./public

jobs:
  # Build the documentation and upload the static HTML files as an artifact.
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version-file: .github/python-version.txt

      # ADJUST THIS: install all dependencies (including pdoc)
      - run: pip install -e . pdoc
      # ADJUST THIS: build your documentation into docs/.
      # We use a custom build script for pdoc itself, ideally you just run `pdoc -o docs/ ...` here.
      - run: pdoc -o html pyonms --docformat google -e pyonms=https://github.com/mmahacek/PyONMS/tree/main/pyonms/

      - uses: actions/upload-pages-artifact@v1
        with:
          path: html/

  # Deploy the artifact to GitHub pages.
  # This is a separate job so that only actions/deploy-pages has the necessary permissions.
  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v1
